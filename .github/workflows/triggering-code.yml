name: Triggering Code

on:
  repository_dispatch:
    types: [org-workflow-bot]  
  workflow_dispatch:

jobs:
  register:
    runs-on: ubuntu-latest
    steps:
    - uses: SvanBoxel/organization-workflow@main
      with:
        id: ${{ github.event.client_payload.id }}
        callback_url: ${{ github.event.client_payload.callback_url }}
        sha: ${{ github.event.client_payload.sha }}
        run_id: ${{ github.run_id }}
        name: ${{ github.workflow }}
        enforce: true
        enforce_admin: true
    - name: Printing variables
      run: |
        echo "commits: ${{ github.event.client_payload.event.commits[0].modified[0] }}"
        echo "repository: ${{ github.event.client_payload.repository.full_name }}"
        echo "ref: ${{ github.event.client_payload.sha }}"
        echo "token: ${{ github.event.client_payload.token }}"
        
        list=($(echo "${{ toJson(github.event.client_payload.event.commits[0].modified) }}" | tr -d '[' | tr -d ']' ))
        img_list=""
        repo=$(echo ${{ github.event.client_payload.repository.full_name }} | awk -F'/' '{print $2}')
        for i in "${list[@]}"
        do
          folder=$(echo $i | awk -F'/' '{print $1}')
          echo $folder
          
          if [[ "$repo" == "human-sensing" ]]
          then
            if [[ "$folder" == "googleVisionAI" ]]
            then
              img_list="$img_list google-vision"
            elif [[ "$folder" == "yarpOpenPose" || "$folder" == "faceLandmarks" ]]
            then
              img_list="$img_list human-sensing"
            fi
          elif [[ "$repo" == "speech" ]]
          then
            img_list="$img_list speech"
          elif [[ "$repo" == "calibration-supervisor" ]]
 	        then
            if [[ "$folder" == "cameraSupervision" ]]
            then
              img_list="$img_list supervise-calib"
            elif [[ "$folder" == "demoRedBallCalibration" ]]
 	          then
 	            img_list="$img_list grasp-the-ball"
 	          fi
          fi
        done
        
        
        
